name: OpenWRT-X86
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    steps:
      - name: 安装依赖
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /etc/apt/sources.list.d /etc/mysql /etc/php /opt/ghc /usr/local/lib/android /usr/share/dotnet
          sudo -E apt -yqq update
          sudo -E apt -yqq purge azure* docker* dotnet* firefox* ghc* google* llvm* moby* mongodb* mysql* openjdk* php* powershell* snap* zulu*
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq clean
          sudo -E apt -yqq autoclean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      - name: 获取源码
        run: |
          git clone --depth=1 https://github.com/openwrt/openwrt.git openwrt
          cd openwrt
          git pull
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Update Plugins
        run: |
          cd ./openwrt/package
          #PassWall
          git clone --depth=1 --single-branch https://github.com/xiaorouji/openwrt-passwall.git
          git clone --depth=1 --single-branch --branch "luci" https://github.com/xiaorouji/openwrt-passwall.git ./pw
          #NAS Packages
          git clone --depth=1 --single-branch https://github.com/linkease/nas-packages.git
          #NAS Packages LUCI
          git clone --depth=1 --single-branch https://github.com/linkease/nas-packages-luci.git
          #iStore
          git clone --depth=1 --single-branch https://github.com/linkease/istore.git
          #Design Theme
          #git clone --depth=1 --single-branch https://github.com/gngpp/luci-theme-design.git
          #Design Config
          #git clone --depth=1 --single-branch https://github.com/gngpp/luci-app-design-config.git
          #OpenClash
          git clone --depth=1 --single-branch --branch "dev" https://github.com/vernesong/OpenClash.git
          #Argon Theme
          git clone --depth=1 --single-branch --branch "18.06" https://github.com/jerrykuku/luci-theme-argon.git
          #Argon Config
          git clone --depth=1 --single-branch https://github.com/jerrykuku/luci-app-argon-config.git
          #OpenClash Core
          cd ./OpenClash/luci-app-openclash/root/etc/openclash
          mkdir ./core && cd ./core
          export TUN_VER=$(curl -sfL $CORE_VER | sed -n "2p")
          curl -sfL -o ./tun.gz "$CORE_TUN"-"$TUN_VER".gz
          gzip -d ./tun.gz
          mv ./tun ./clash_tun
          curl -sfL -o ./meta.tar.gz $CORE_MATE
          tar -zxf ./meta.tar.gz
          mv ./clash ./clash_meta
          curl -sfL -o ./dev.tar.gz $CORE_DEV
          tar -zxf ./dev.tar.gz
          chmod +x ./clash*
          rm -rf ./*.gz
      - name: 配置
        run: |
          cd openwrt
          # 设置设备
          make menuconfig <<EOF
          CONFIG_TARGET_x86=y
          # 增加参数
          CONFIG_TARGET_KERNEL_PARTSIZE=64
          CONFIG_TARGET_ROOTFS_PARTSIZE=512
          # 增加组件
          CONFIG_PACKAGE_autosamba=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_ip6tables-extra=y
          CONFIG_PACKAGE_ip6tables-mod-nat=y
          # 增加主题
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-app-argon-config=y         
          # 增加插件
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-unblockmusic=y
          CONFIG_PACKAGE_luci-app-quickstart=y
          CONFIG_PACKAGE_luci-app-istorex=y
          CONFIG_PACKAGE_luci-app-store=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-passwall=y
          # 删除插件
          CONFIG_PACKAGE_luci-app-ipsec=n
          CONFIG_PACKAGE_luci-app-vsftpd=n
          CONFIG_PACKAGE_luci-app-xlnetacc=n
          CONFIG_PACKAGE_luci-app-wol=n
          CONFIG_PACKAGE_luci-app-ddns=n
          CONFIG_PACKAGE_luci-app-vlmcsd=n
          CONFIG_PACKAGE_luci-app-accesscontrol=n
          EOF
      - name: 编译固件
        run: |
          cd openwrt
          make -j$(nproc) download V=s
          make -j$(nproc) || make -j1 V=s
      - name: 上传固件
        uses: actions/upload-artifact@v2  # 使用actions/upload-artifact@v2 Action上传编译好的固件到Github Actions的Artifact中，便于后续下载
        with:
          name: OpenWrt_Firmware  # Artifact的名称，可自定义
          path: ./openwrt/bin/targets  # 上传的目录，需要注意路径是否正确
